variables:
  CONTAINER_IMAGE_WEBSERVER: ${CI_REGISTRY}/${CI_PROJECT_PATH}/webserver:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_IMAGE_WEBSERVER_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}/webserver:latest
  KUBE_NAMESPACE: "default"

before_script:
- LOWERCASE_CONTAINER_IMAGE_WEBSERVER=$(echo "${CONTAINER_IMAGE_WEBSERVER}" | tr '[:upper:]' '[:lower:]')
- LOWERCASE_CONTAINER_IMAGE_WEBSERVER_LATEST=$(echo "${CONTAINER_IMAGE_WEBSERVER_LATEST}" | tr '[:upper:]' '[:lower:]')

services:
- docker:dind #Start the docker daemon

stages: #declare the stages to task
- test
- build
- deploy

test:
  stage: test
  image: node:carbon
  variables:
    NODE_ENV: 'test'
  script:
  - npm install --silent
  #- npm test

build:
  stage: build # build image only after test passed
 # only: [master]  #build and push images only for master branch commits;
  image: docker:git
  services:
  - docker:dind
  before_script:
    - docker version
    - docker info
    
    #- "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
  - echo "${CASE_CONTAINER_IMAGE_WEBSERVER}"
  - echo "${LOWERCASE_CONTAINER_IMAGE_WEBSERVER}"
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - docker build  --file Dockerfile -t ${LOWERCASE_CONTAINER_IMAGE_WEBSERVER} .
  - docker tag ${LOWERCASE_CONTAINER_IMAGE_WEBSERVER} ${LOWERCASE_CONTAINER_IMAGE_WEBSERVER_LATEST}
  - docker push ${LOWERCASE_CONTAINER_IMAGE_WEBSERVER}


deploy_k8s:
  stage: deploy
  only: [master]  #build and push images only for master branch commits
  image: google/cloud-sdk:latest
  script:
   - echo "${KUBE_CERTIFICATE}" > kube_ca.pem
   - kubectl config set-cluster default-cluster --server=${KUBE_URL} --certificate-authority="$(pwd)/kube_ca.pem"
   - kubectl config set-credentials default-admin --token=${KUBE_TOKEN}
   - kubectl config set-context default-system --cluster=default-cluster --user=default-admin --namespace=${KUBE_NAMESPACE}
   - kubectl config use-context default-system
   - kubectl cluster-info
   - sed -i "s#__IMAGETAG__#${LOWERCASE_CONTAINER_IMAGE_WEBSERVER}#g" kubernetes/node-ws.yaml 
   - kubectl apply -f kubernetes/node-ws.yaml
   - kubectl rollout status -n "$KUBE_NAMESPACE" -w "deployment/web-server-deployment"
